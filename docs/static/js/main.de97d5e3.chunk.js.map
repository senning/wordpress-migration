{"version":3,"sources":["SitesContext.js","Input.js","Instance.js","Commands.js","App.js","serviceWorker.js","index.js"],"names":["SitesContext","React","createContext","Input","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","value","defaultValue","onChange","bind","assertThisInitialized","onFocus","onBlur","event","target","validator","context","update","instance","name","setState","focus","containerClass","inputClass","react_default","a","createElement","className","label","type","autoFocus","autofocus","Component","defaultProps","contextType","WordPressInstance","match","src_Input","autoProtocol","Commands","showHints","toggleHints","new","prefix","old","url","react","title","onClick","App","property","href","role","Provider","Instance","src_Commands","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.de97d5e3.chunk.js","sourcesContent":["import React from 'react';\nexport const SitesContext = React.createContext(null);","import React, { Component } from 'react';\nimport './App.css';\nimport { SitesContext } from './SitesContext';\n\nclass Input extends Component {\n  constructor(props){\n    super(props);\n\n    this.state = {value: this.props.defaultValue}\n\n    this.onChange = this.onChange.bind(this);\n    this.onFocus = this.onFocus.bind(this);\n    this.onBlur = this.onBlur.bind(this);\n  }\n\n  onChange(event){\n    let value = event.target.value;\n    if(typeof this.props.validator === \"function\"){\n      value = this.props.validator(value);\n    }\n    // this.props.onChange(value);\n    this.context.update(this.props.instance, this.props.name, value);\n\n    this.setState({\n      value: value\n    });\n  }\n\n  onFocus(){\n    this.setState({\n      focus: true\n    })\n  }\n\n  onBlur(){\n    this.setState({\n      focus: false\n    })\n  }\n\n  render() {\n    let containerClass = \"input-container\";\n    containerClass += this.state.focus ? \" is-focussed\" : \"\";\n\n    let inputClass = \"input-control \";\n    inputClass += \"input--\"+this.props.instance+\"-\"+this.props.name;\n\n    return (\n      <label className={containerClass}>\n        <span \n          className=\"input-label\"\n          >{this.props.label}</span>\n        <input\n          className={inputClass}\n          type={this.props.type}\n          value={this.context[this.props.instance][this.props.name]}\n          onChange={this.onChange}\n          onFocus={this.onFocus}\n          onBlur={this.onBlur}\n          autoFocus={this.context.autofocus === this.props.instance+\"-\"+this.props.name}\n          />\n      </label>\n    );\n  }\n}\n\nInput.defaultProps = {\n  label: \"\",\n  type: \"input\",\n  name: \"\",\n  defaultValue: \"\",\n  onChange: function(){}\n}\n\nInput.contextType = SitesContext;\n\nexport default Input;","import React, { Component } from 'react';\nimport Input from './Input';\n\nclass WordPressInstance extends Component {\n\n  /**\n   * Check the site URL for a protocol\n   * If none found, automatically add https\n   * @param  {[type]} value [description]\n   * @return {[type]}       [description]\n   */\n  autoProtocol(value){\n    value = value.match(/^.*:\\/\\//g) ? \n      value\n      : \"https://\"+value;\n\n    return value;\n  }\n\n  render() {\n    return (\n      <div className=\"instance\">\n        <h1 className=\"instance-title\">{this.props.label}</h1>\n        <Input\n          instance={this.props.instance}\n          label=\"Site URL\"\n          name=\"url\"\n          validator={this.autoProtocol}\n          />\n        <Input\n          instance={this.props.instance}\n          label=\"Table Prefix\"\n          name=\"prefix\"\n          defaultValue=\"wp_\"\n          />\n      </div>\n    );\n  }\n}\n\nWordPressInstance.defaultProps = {\n  label: \"\"\n}\n\nexport default WordPressInstance;","import React, { Component, Fragment } from 'react';\nimport './App.css';\nimport { SitesContext } from './SitesContext';\n\nclass Commands extends Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      showHints: false\n    }\n\n    this.toggleHints = this.toggleHints.bind(this);\n  }\n\n  toggleHints(){\n    this.setState({\n      showHints: !this.state.showHints\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"commands\">\n        <h1 className=\"commands-title\">Here's your SQL:</h1>\n        <p className=\"commands-options\">UPDATE {this.context.new.prefix}options SET option_value = replace(option_value, '{this.context.old.url}', '{this.context.new.url}');</p>\n        <p className=\"commands-guid\">UPDATE {this.context.new.prefix}posts SET guid = replace(guid, '{this.context.old.url}', '{this.context.new.url}') WHERE post_type &lt;&gt; 'attachment';</p>\n        <p className=\"commands-content\">UPDATE {this.context.new.prefix}posts SET post_content = replace(post_content, '{this.context.old.url}', '{this.context.new.url}');</p>\n        <p className=\"commands-postmeta\">UPDATE {this.context.new.prefix}postmeta SET meta_value = replace(meta_value, '{this.context.old.url}', '{this.context.new.url}');</p>\n        { this.context.new.prefix !== this.context.old.prefix ?\n          <Fragment>\n            <p className=\"commands-usermeta\">UPDATE {this.context.new.prefix}usermeta SET meta_key = replace(meta_key, '{this.context.old.prefix}', '{this.context.new.prefix}');</p>\n            <p className=\"commands-optionsPrefix\">UPDATE {this.context.new.prefix}options SET option_name = replace(option_name, '{this.context.old.prefix}', '{this.context.new.prefix}');</p>\n          </Fragment>\n          : \"\"\n        }\n        {!this.state.showHints ?\n\n          <button \n            className=\"hint-trigger\"\n            title=\"Show description of SQL commands\"\n            onClick={this.toggleHints}\n            >?</button> :\n\n          <div className=\"hint-text\">\n            <button\n              className=\"hint-trigger\"\n              title=\"Hide description of SQL commands\"\n              onClick={this.toggleHints}\n              >&times;</button>\n            <h1 className=\"commands-title\">Here's what each command does:</h1>\n            <ol>\n              <li>Update the <code>options</code> so WordPress knows where your site is. Used for things like including assets and locating the admin dashboard; it'll also update any URLs in your widgets.</li>\n              <li>Update the <code>posts</code> table to set the permalink for all of your posts and pages to the new site.</li>\n              <li>Update the <code>posts</code> table so that all of the links and images <em>in</em> your posts and pages are pointed to the new site.</li>\n              <li>Update and <code>post_meta</code> to point to the new site. These are generally used by plugins or theme customizations.</li>\n            </ol>\n            <p>These two commands are only necessary, and will only show up, if the table prefix is changing:</p>\n            <ol>\n              <li>Updates each user's capabilities and dashboard settings to use the new prefix.</li>\n              <li>Update the site's capabilities settings to use the new prefix.</li>\n            </ol>\n          </div>\n        }\n      </div>\n    );\n  }\n}\n\nCommands.contextType = SitesContext;\n\nexport default Commands;","import React, { Component } from 'react';\nimport Instance from './Instance';\nimport './App.css';\nimport { SitesContext } from './SitesContext';\nimport Commands from './Commands';\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n\n    /**\n     * Update context properties\n     * @param  {[type]} instance [description]\n     * @param  {[type]} property [description]\n     * @param  {[type]} value    [description]\n     * @return {[type]}          [description]\n     */\n    this.update = (instance, property, value) => {\n      this.state[instance][property] = value;\n      this.setState(this.state);\n    }\n\n    this.state = {\n      old: {\n        url: \"https://\",\n        prefix: \"wp_\",\n      },\n      new: {\n        url: \"https://\",\n        prefix: \"wp_\"\n      },\n      autofocus: \"old-url\",\n      update: this.update     \n    }\n\n    // this.update = this.update.bind(this);\n\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"header\">\n          <h1 className=\"header-title\">WordPress Migration SQL Maker</h1>\n          <p className=\"header-credit\"><a href=\"https://medium.com/@senning\">@senning</a></p>\n        </header>\n        <main className=\"body\" role=\"main\">\n          <SitesContext.Provider value={this.state}>\n            <Instance \n              instance=\"old\"\n              label=\"Current Site\"\n              />\n            <Instance \n              instance=\"new\"\n              label=\"New Site\"\n              />\n            <Commands />\n          </SitesContext.Provider>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}